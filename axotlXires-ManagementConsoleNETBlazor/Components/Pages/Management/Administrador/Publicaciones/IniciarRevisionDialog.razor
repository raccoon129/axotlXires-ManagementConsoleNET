@using DAL.Modelos
@using DAL.Consumo
@using axotlXires_ManagementConsoleNETBlazor.Services
@inject AuthService AuthService
@inject DialogService DialogService
@inject NotificationService NotificationService

<div class="container">
    <div class="text-center mb-4">
        <h5>Iniciar revisión para:</h5>
        <h4 class="text-primary">@TituloPublicacion</h4>
    </div>

    <div class="mb-4">
        <label>Seleccione el tipo de revisión:</label>
        <div class="tipos-revision mt-3">
            @foreach (var tipo in TiposRevision)
            {
                <div class="tipo-revision-option @(idTipoRevisionSeleccionado == tipo.IdTipoRevision ? "selected" : "")"
                     @onclick="() => SeleccionarTipoRevision(tipo.IdTipoRevision)">
                    <div>
                        <strong>@tipo.Nombre</strong>
                        <div class="small text-muted">@tipo.Descripcion</div>
                    </div>
                </div>
            }
        </div>

        @if (!string.IsNullOrEmpty(mensajeError))
        {
            <div class="alert alert-danger mt-3">@mensajeError</div>
        }

        <div class="alert alert-info mt-3">
            <small>
                <i class="bi bi-info-circle"></i>
                Al iniciar una revisión, quedará asignado como revisor de esta publicación.
                Posteriormente podrá aprobarla o solicitar cambios.
            </small>
        </div>
    </div>

    <div class="row">
        <div class="col-6">
            <RadzenButton Text="Cancelar"
                          ButtonStyle="ButtonStyle.Light"
                          Click="@CancelarInicio"
                          Style="width: 100%;" />
        </div>
        <div class="col-6">
            <RadzenButton Text="Iniciar Revisión"
                          ButtonStyle="ButtonStyle.Primary"
                          Click="@IniciarRevision"
                          Style="width: 100%;"
                          Disabled="@(idTipoRevisionSeleccionado <= 0 || procesando)" />
        </div>
    </div>
</div>

<style>
    .tipos-revision {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .tipo-revision-option {
        padding: 12px;
        border: 1px solid #dee2e6;
        border-radius: 5px;
        cursor: pointer;
        transition: all 0.2s;
    }

        .tipo-revision-option:hover {
            background-color: #f8f9fa;
        }

        .tipo-revision-option.selected {
            background-color: #e9f2ff;
            border-color: #80bdff;
        }
</style>

@code {
    [Parameter] public int IdPublicacion { get; set; }
    [Parameter] public string TituloPublicacion { get; set; }
    [Parameter] public List<TipoRevision> TiposRevision { get; set; } = new List<TipoRevision>();

    private int idTipoRevisionSeleccionado = 0;
    private string mensajeError = string.Empty;
    private bool procesando = false;

    /// <summary>
    /// Selecciona un tipo de revisión
    /// </summary>
    private void SeleccionarTipoRevision(int idTipoRevision)
    {
        idTipoRevisionSeleccionado = idTipoRevision;
        mensajeError = string.Empty;
    }

    /// <summary>
    /// Cancela el inicio de revisión
    /// </summary>
    private void CancelarInicio()
    {
        DialogService.Close(false);
    }

    /// <summary>
    /// Inicia el proceso de revisión
    /// </summary>
    private async Task IniciarRevision()
    {
        if (idTipoRevisionSeleccionado <= 0)
        {
            mensajeError = "Debe seleccionar un tipo de revisión";
            return;
        }

        procesando = true;
        mensajeError = string.Empty;

        try
        {
            // Obtener token de autenticación
            string token = await AuthService.ObtenerToken();

            if (string.IsNullOrEmpty(token))
            {
                mensajeError = "Su sesión ha expirado. Por favor, inicie sesión nuevamente.";
                procesando = false;
                return;
            }

            // Llamar a la API para iniciar la revisión
            var respuesta = await revisionPublicaciones.IniciarRevisionAsync(token, IdPublicacion, idTipoRevisionSeleccionado);

            if (respuesta.Status == "success")
            {
                // Cerrar el diálogo y retornar éxito
                DialogService.Close(true);
            }
            else
            {
                mensajeError = respuesta.Mensaje ?? "Error al iniciar la revisión";
            }
        }
        catch (Exception ex)
        {
            mensajeError = $"Error: {ex.Message}";
        }
        finally
        {
            procesando = false;
        }
    }
}

